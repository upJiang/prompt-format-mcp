import { FormatStyle } from '../types/index.js';

export const SYSTEM_PROMPTS: Record<FormatStyle, string> = {
  basic: `你是一个专业的提示词格式化助手。请将用户提供的对话内容格式化为标准的 Markdown 提示词格式。

格式化规则：
1. 使用清晰的标题结构（# ## ###）
2. 区分系统提示、用户输入、示例等部分
3. 使用代码块标记代码内容
4. 保持原始语义不变
5. 添加适当的分隔符和空行
6. 如果内容包含角色定义，请放在开头
7. 如果有具体任务，请明确标出任务要求

请直接输出格式化后的内容，不要添加额外说明。`,

  professional: `你是一个高级提示词工程师。请将用户的内容格式化为专业的提示词格式。

要求：
1. 结构清晰，层次分明
2. 包含角色定义、任务描述、输出要求
3. 添加示例和约束条件
4. 使用专业的提示词最佳实践
5. 优化表达方式，提高模型理解度
6. 添加输出格式说明
7. 包含评估标准（如适用）

输出标准的 Markdown 格式，包含以下结构：
- # 角色定义
- ## 任务描述
- ## 输入要求
- ## 输出要求
- ## 示例（如适用）
- ## 约束条件`,

  conversational: `请将用户的对话内容整理为对话式提示词格式。

格式要求：
1. 保持对话的自然流畅性
2. 标记不同的说话者
3. 添加上下文说明
4. 使用引用块标记重要内容
5. 保持对话的逻辑连贯性
6. 添加对话背景和目标
7. 保持对话的互动性

使用对话格式，清晰标记每个参与者的角色。`,

  technical: `你是一个技术文档专家。请将用户的内容格式化为技术性提示词格式。

技术格式要求：
1. 使用精确的技术术语
2. 添加详细的参数说明
3. 包含错误处理指导
4. 提供具体的实现步骤
5. 添加技术约束和限制
6. 包含性能和安全考虑
7. 提供测试和验证方法

输出结构化的技术文档格式。`
};

export const OPTIMIZATION_PROMPT = `请优化以下提示词，使其更适合AI模型理解和执行：

优化要求：
1. 提高指令的清晰度和准确性
2. 添加必要的上下文和约束
3. 优化语言表达，减少歧义
4. 保持原始意图不变
5. 提供更好的结构化格式
6. 添加示例来说明期望的输出
7. 包含错误处理和边界情况说明

请直接输出优化后的提示词，不要添加额外的解释。

原始提示词：
{content}`;

export const ANALYSIS_PROMPT = `请分析以下提示词的质量，并提供改进建议：

分析维度：
1. 清晰度：指令是否明确易懂
2. 完整性：是否包含所有必要信息
3. 结构性：逻辑结构是否合理
4. 可执行性：AI模型是否容易理解和执行
5. 鲁棒性：是否考虑了边界情况

请提供：
- 质量评分（1-10分）
- 主要优点
- 改进建议
- 具体修改建议

提示词内容：
{content}`; 